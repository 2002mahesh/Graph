
#include <iostream>
#include<bits/stdc++.h>

using namespace std;

map<int,vector<pair<int,int>>> adjlist(int n,int e, vector<vector<int>>edges)
{
  map<int,vector<pair<int,int>>>adjList;

  for(int i=0;i<e;i++)
    {
       adjList[edges[i][0]].push_back({edges[i][1],edges[i][2]});
       
    }

  return adjList;
}

 void bellmonFord(int n, int src,map<int,vector<pair<int,int>>>& adjList)
 {
      vector<int>dist(n,INT_MAX);
      dist[src]=0;

      for(int i=0;i<n-1;i++)
      {
        for(auto t:adjList)
        {
            for(auto nbr:adjList[t.first])
            {
                int u=t.first;
                int v=nbr.first;
                int wt=nbr.second;

                if(dist[u]!=INT_MAX&&dist[v]>dist[u]+wt)
                {
                    dist[v]=dist[u]+wt;
                }

            }
        }
      }
    

      for(auto i:dist)
      cout<<i<<" ";
 }


   
int main() {
 int n;
  cout<<"Enter the Number of nodes:";
  cin>>n;

  int e;
  cout<<"Enter the Number of Edges:";
  cin>>e;

  vector<vector<int>>edges;

  for(int i=0;i<e;i++)
    {
      int u,v,wt;
      cin>>u>>v>>wt;

      edges.push_back({u,v,wt});
    }
   
   
  map<int,vector<pair<int,int>>>adjList=adjlist(n,e,edges);
  
  bellmonFord(n,0,adjList);
 

 
 

 
}
