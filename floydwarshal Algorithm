

#include <iostream>
#include<bits/stdc++.h>

using namespace std;

map<int,vector<pair<int,int>>> adjlist(int n,int e, vector<vector<int>>edges)
{
  map<int,vector<pair<int,int>>>adjList;

  for(int i=0;i<e;i++)
    {
       adjList[edges[i][0]].push_back({edges[i][1],edges[i][2]});
       
    }

  return adjList;
}

 void floydWarshal(int n,map<int,vector<pair<int,int>>>& adjList)
 {
      vector<vector<int>>dist(n,vector<int>(n,1e9));
      for(int i=0;i<n;i++)
      dist[i][i]=0;

      for(auto t:adjList)
      {
        for(auto nbr:adjList[t.first])
        {
            int u=t.first;
            int v=nbr.first;
            int wt=nbr.second;

            dist[u][v]=wt;
        }
      }

      for(int helper=0;helper<n;helper++)
      {
        for(int src=0;src<n;src++)
        {
            for(int des=0;des<n;des++)
            {
                dist[src][des]=min(dist[src][des],dist[src][helper]+dist[helper][des]);
            }
        }
      }

      for(int i=0;i<n;i++)
      {
        for(int j=0;j<n;j++)
        {
            cout<<dist[i][j]<<" ";
        }
        cout<<endl;
      }
 }


   
int main() {
 int n;
  cout<<"Enter the Number of nodes:";
  cin>>n;

  int e;
  cout<<"Enter the Number of Edges:";
  cin>>e;

  vector<vector<int>>edges;

  for(int i=0;i<e;i++)
    {
      int u,v,wt;
      cin>>u>>v>>wt;

      edges.push_back({u,v,wt});
    }
   
   
  map<int,vector<pair<int,int>>>adjList=adjlist(n,e,edges);
  
  floydWarshal(n,adjList);
 

 
 

 
}
